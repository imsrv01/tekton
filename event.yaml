
apiVersion: v1
kind: Namespace
metadata:
  name: "tekton-test"
  labels:
    name: "tekton-test"
---
apiVersion: triggers.tekton.dev/v1beta1
kind: EventListener
metadata:
  name: pull-request-approved
  namespace: tekton-test
spec:
  serviceAccountName: pipeline
  triggers:
    - triggerRef: pull-request-approved
---
apiVersion: triggers.tekton.dev/v1beta1
kind: Trigger
metadata:
  name: pull-request-approved
  namespace: tekton-test
spec:
  serviceAccountName: pipeline
  interceptors:
    - ref:
        name: "cel"
      params:
      - name: "filter"
        value: "body.comment.text=='MERGE' && body.pullRequest.reviewers.exists(x, x.user.name == body.comment.author.name)"
      - name: "overlays"
        value:
        - key: bitbucket-api-base-url
          expression: "body.pullRequest.links.self[0].href.split('projects')[0]"
        - key: pull-request-description
          expression: "has(body.pullRequest.description) ? body.pullRequest.description : '' "
    - ref:
        name: "bitbucket"
      params:
        - name: "secretRef"
          value:
            secretName: bitbucket-secret
            secretKey: secretToken
        - name: "eventTypes"
          value: ["pr:comment:added"]
  bindings:
    - ref: merge-after-change-validation
  template:
    ref: merge-after-change-validation
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerBinding
metadata:
  name: merge-after-change-validation
  namespace: tekton-test
spec:
  params:
  - name: project-key
    value: $(body.pullRequest.toRef.repository.project.key)
  - name: repository-slug
    value: $(body.pullRequest.toRef.repository.slug)
  - name: pull-request-id
    value: $(body.pullRequest.id)
  - name: pull-request-version
    value: $(body.pullRequest.version)
  - name: pull-request-description
    value: $(extensions.pull-request-description)
  - name: bitbucket-api-base-url
    value: $(extensions.bitbucket-api-base-url)    
---
apiVersion: triggers.tekton.dev/v1beta1
kind: TriggerTemplate
metadata:
  name: merge-after-change-validation
  namespace: tekton-test
spec:
  params:
  - name: project-key
    description: project key
  - name: repository-slug
    description: Name of the repository
  - name: pull-request-id
    description: Pull request id
  - name: pull-request-version
    description: pull request current version
  - name: bitbucket-api-base-url
    description: bitbucket api base url
  - name: pull-request-description
    description: pull request description   

  resourcetemplates:
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      generateName: merge-after-change-validation-
    spec:
      serviceAccountName: pipeline
      pipelineRef:
        name: merge-after-change-validation
      params:
      - name: project-key
        value: "$(tt.params.project-key)"
      - name: repository-slug
        value: "$(tt.params.repository-slug)"
      - name: pull-request-id
        value: "$(tt.params.pull-request-id)"        
      - name: pull-request-version
        value: "$(tt.params.pull-request-version)"
      - name: bitbucket-api-base-url
        value: "$(tt.params.bitbucket-api-base-url)"
      - name: pull-request-description
        value: "$(tt.params.pull-request-description)"                   
---
apiVersion: v1
kind: Secret
metadata:
  name: bitbucket-secret
  namespace: tekton-test
type: Opaque
stringData:
  secretToken: "1234567"